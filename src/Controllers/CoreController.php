<?php

namespace BattleShip\Controllers;

// une classe abstraite, dÃ©signÃ©e par le mot clÃ© "abstract"
// indique une classe qui ne peut Ãªtre instanciÃ©e
// on peut par contre HERITER de cette classe, et instancier la classe qui en hÃ©rite
// on indiquera souvent "abstract" devant une classe qui nous permet de dÃ©finir un "comportement type", mais pas de traitement Ã  proprement parler.
// ces traitement seront executÃ©s par les classes qui hÃ©ritent de cette classe abstraite

abstract class CoreController{
// En private, les enfants ne pourraient y accÃ©der,
// on passe donc les propriÃ©tÃ©s en protected
    protected $router;
    protected $template;

    public function __construct($router){


        $this->router = $router;

        $this->templates = new \League\Plates\Engine(ABS_BASE_PATH.'/src/Views');

        $this->templates->addData([
            'basePath' => $_SERVER['BASE_URI'] ?: '',
        ]);

    }

    public function error404()
    {
        header('HTTP/1.0 404 Not Found');
        echo 'Page non trouvÃ©e ðŸ˜±';
        exit;
    }

}